2024-02-19 14:48:26,586:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-19 14:48:26,586:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-19 14:48:26,586:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-19 14:48:26,586:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-19 14:48:27,302:INFO:PyCaret RegressionExperiment
2024-02-19 14:48:27,302:INFO:Logging name: My_Reg_Modl
2024-02-19 14:48:27,302:INFO:ML Usecase: MLUsecase.REGRESSION
2024-02-19 14:48:27,302:INFO:version 3.2.0
2024-02-19 14:48:27,302:INFO:Initializing setup()
2024-02-19 14:48:27,302:INFO:self.USI: 7172
2024-02-19 14:48:27,302:INFO:self._variable_keys: {'X', 'X_train', '_ml_usecase', 'fold_generator', 'logging_param', 'y', 'html_param', 'gpu_n_jobs_param', 'y_test', 'transform_target_param', 'X_test', 'memory', 'fold_shuffle_param', 'data', 'target_param', 'n_jobs_param', 'gpu_param', 'seed', 'exp_name_log', 'y_train', 'fold_groups_param', 'USI', 'log_plots_param', '_available_plots', 'pipeline', 'idx', 'exp_id'}
2024-02-19 14:48:27,302:INFO:Checking environment
2024-02-19 14:48:27,303:INFO:python_version: 3.11.5
2024-02-19 14:48:27,303:INFO:python_build: ('main', 'Sep 11 2023 13:26:23')
2024-02-19 14:48:27,303:INFO:machine: AMD64
2024-02-19 14:48:27,303:INFO:platform: Windows-10-10.0.22621-SP0
2024-02-19 14:48:27,303:INFO:Memory: svmem(total=16815702016, available=3421085696, percent=79.7, used=13394616320, free=3421085696)
2024-02-19 14:48:27,303:INFO:Physical Core: 10
2024-02-19 14:48:27,303:INFO:Logical Core: 12
2024-02-19 14:48:27,303:INFO:Checking libraries
2024-02-19 14:48:27,304:INFO:System:
2024-02-19 14:48:27,304:INFO:    python: 3.11.5 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:26:23) [MSC v.1916 64 bit (AMD64)]
2024-02-19 14:48:27,304:INFO:executable: C:\Users\DELL\anaconda3\python.exe
2024-02-19 14:48:27,304:INFO:   machine: Windows-10-10.0.22621-SP0
2024-02-19 14:48:27,304:INFO:PyCaret required dependencies:
2024-02-19 14:48:28,566:INFO:                 pip: 23.2.1
2024-02-19 14:48:28,566:INFO:          setuptools: 68.0.0
2024-02-19 14:48:28,566:INFO:             pycaret: 3.2.0
2024-02-19 14:48:28,566:INFO:             IPython: 8.15.0
2024-02-19 14:48:28,566:INFO:          ipywidgets: 8.0.4
2024-02-19 14:48:28,566:INFO:                tqdm: 4.65.0
2024-02-19 14:48:28,566:INFO:               numpy: 1.24.3
2024-02-19 14:48:28,566:INFO:              pandas: 1.5.3
2024-02-19 14:48:28,566:INFO:              jinja2: 3.1.2
2024-02-19 14:48:28,566:INFO:               scipy: 1.11.4
2024-02-19 14:48:28,566:INFO:              joblib: 1.2.0
2024-02-19 14:48:28,566:INFO:             sklearn: 1.2.2
2024-02-19 14:48:28,566:INFO:                pyod: 1.1.3
2024-02-19 14:48:28,566:INFO:            imblearn: 0.10.1
2024-02-19 14:48:28,566:INFO:   category_encoders: 2.6.3
2024-02-19 14:48:28,566:INFO:            lightgbm: 4.3.0
2024-02-19 14:48:28,566:INFO:               numba: 0.57.1
2024-02-19 14:48:28,566:INFO:            requests: 2.31.0
2024-02-19 14:48:28,566:INFO:          matplotlib: 3.7.2
2024-02-19 14:48:28,566:INFO:          scikitplot: 0.3.7
2024-02-19 14:48:28,566:INFO:         yellowbrick: 1.5
2024-02-19 14:48:28,566:INFO:              plotly: 5.9.0
2024-02-19 14:48:28,566:INFO:    plotly-resampler: Not installed
2024-02-19 14:48:28,566:INFO:             kaleido: 0.2.1
2024-02-19 14:48:28,566:INFO:           schemdraw: 0.15
2024-02-19 14:48:28,566:INFO:         statsmodels: 0.14.0
2024-02-19 14:48:28,566:INFO:              sktime: 0.21.1
2024-02-19 14:48:28,566:INFO:               tbats: 1.1.3
2024-02-19 14:48:28,566:INFO:            pmdarima: 2.0.4
2024-02-19 14:48:28,566:INFO:              psutil: 5.9.0
2024-02-19 14:48:28,566:INFO:          markupsafe: 2.1.1
2024-02-19 14:48:28,566:INFO:             pickle5: Not installed
2024-02-19 14:48:28,566:INFO:         cloudpickle: 2.2.1
2024-02-19 14:48:28,566:INFO:         deprecation: 2.1.0
2024-02-19 14:48:28,566:INFO:              xxhash: 2.0.2
2024-02-19 14:48:28,566:INFO:           wurlitzer: Not installed
2024-02-19 14:48:28,566:INFO:PyCaret optional dependencies:
2024-02-19 14:48:28,724:INFO:                shap: Not installed
2024-02-19 14:48:28,724:INFO:           interpret: Not installed
2024-02-19 14:48:28,724:INFO:                umap: Not installed
2024-02-19 14:48:28,724:INFO:     ydata_profiling: 4.6.4
2024-02-19 14:48:28,724:INFO:  explainerdashboard: Not installed
2024-02-19 14:48:28,724:INFO:             autoviz: Not installed
2024-02-19 14:48:28,724:INFO:           fairlearn: Not installed
2024-02-19 14:48:28,724:INFO:          deepchecks: Not installed
2024-02-19 14:48:28,724:INFO:             xgboost: 2.0.3
2024-02-19 14:48:28,724:INFO:            catboost: Not installed
2024-02-19 14:48:28,724:INFO:              kmodes: Not installed
2024-02-19 14:48:28,724:INFO:             mlxtend: Not installed
2024-02-19 14:48:28,724:INFO:       statsforecast: Not installed
2024-02-19 14:48:28,724:INFO:        tune_sklearn: Not installed
2024-02-19 14:48:28,724:INFO:                 ray: Not installed
2024-02-19 14:48:28,724:INFO:            hyperopt: Not installed
2024-02-19 14:48:28,724:INFO:              optuna: Not installed
2024-02-19 14:48:28,724:INFO:               skopt: Not installed
2024-02-19 14:48:28,724:INFO:              mlflow: 2.9.2
2024-02-19 14:48:28,724:INFO:              gradio: Not installed
2024-02-19 14:48:28,724:INFO:             fastapi: Not installed
2024-02-19 14:48:28,724:INFO:             uvicorn: Not installed
2024-02-19 14:48:28,724:INFO:              m2cgen: Not installed
2024-02-19 14:48:28,724:INFO:           evidently: Not installed
2024-02-19 14:48:28,724:INFO:               fugue: Not installed
2024-02-19 14:48:28,724:INFO:           streamlit: Not installed
2024-02-19 14:48:28,724:INFO:             prophet: Not installed
2024-02-19 14:48:28,724:INFO:None
2024-02-19 14:48:28,724:INFO:Set up data.
2024-02-19 14:48:28,756:INFO:Set up folding strategy.
2024-02-19 14:48:28,756:INFO:Set up train/test split.
2024-02-19 14:48:28,787:INFO:Set up index.
2024-02-19 14:48:28,787:INFO:Assigning column types.
2024-02-19 14:48:28,803:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-19 14:48:28,803:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-02-19 14:48:28,803:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-02-19 14:48:28,818:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-02-19 14:48:28,928:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-02-19 14:48:29,021:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-19 14:48:29,021:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-19 14:48:29,021:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 14:48:29,021:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-02-19 14:48:29,037:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-02-19 14:48:29,053:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-02-19 14:48:29,146:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-02-19 14:48:29,224:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-19 14:48:29,224:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-19 14:48:29,240:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 14:48:29,240:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-02-19 14:48:29,240:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-02-19 14:48:29,256:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-02-19 14:48:29,381:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-02-19 14:48:29,475:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-19 14:48:29,475:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-19 14:48:29,475:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 14:48:29,490:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-02-19 14:48:29,490:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-02-19 14:48:29,600:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-02-19 14:48:29,662:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-19 14:48:29,662:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-19 14:48:29,678:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 14:48:29,678:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-02-19 14:48:29,693:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-02-19 14:48:29,834:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-02-19 14:48:29,912:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-19 14:48:29,912:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-19 14:48:29,912:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 14:48:29,928:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-02-19 14:48:30,037:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-02-19 14:48:30,131:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-19 14:48:30,131:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-19 14:48:30,146:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 14:48:30,146:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-02-19 14:48:30,256:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-02-19 14:48:30,334:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-19 14:48:30,334:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-19 14:48:30,334:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 14:48:30,490:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-02-19 14:48:30,568:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-19 14:48:30,568:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-19 14:48:30,568:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 14:48:30,568:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-19 14:48:30,693:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-02-19 14:48:30,787:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-19 14:48:30,803:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 14:48:30,928:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-02-19 14:48:31,037:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-19 14:48:31,037:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 14:48:31,037:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-02-19 14:48:31,271:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-19 14:48:31,271:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 14:48:31,537:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-19 14:48:31,543:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 14:48:31,549:INFO:Preparing preprocessing pipeline...
2024-02-19 14:48:31,549:INFO:Set up target transformation.
2024-02-19 14:48:31,549:INFO:Set up simple imputation.
2024-02-19 14:48:31,560:INFO:Set up encoding of ordinal features.
2024-02-19 14:48:31,566:INFO:Set up encoding of categorical features.
2024-02-19 14:48:31,567:INFO:Set up feature normalization.
2024-02-19 14:48:31,569:INFO:Set up column name cleaning.
2024-02-19 14:48:32,293:INFO:Finished creating preprocessing pipeline.
2024-02-19 14:48:32,356:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\DELL\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(include=['months_as_customer', 'age',
                                             'policy_number',
                                             'policy_deductable',
                                             'policy_annual_premi...
                 TransformerWrapper(include=['policy_bind_date',
                                             'incident_date',
                                             'incident_location',
                                             'auto_model'],
                                    transformer=TargetEncoder(cols=['policy_bind_date',
                                                                    'incident_date',
                                                                    'incident_location',
                                                                    'auto_model'],
                                                              handle_missing='return_nan'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-02-19 14:48:32,356:INFO:Creating final display dataframe.
2024-02-19 14:48:33,847:INFO:Setup _display_container:                     Description               Value
0                    Session id                8008
1                        Target  total_claim_amount
2                   Target type          Regression
3           Original data shape          (1000, 39)
4        Transformed data shape         (1000, 127)
5   Transformed train set shape          (700, 127)
6    Transformed test set shape          (300, 127)
7              Ordinal features                   2
8              Numeric features                  17
9          Categorical features                  21
10     Rows with missing values                9.1%
11                   Preprocess                True
12              Imputation type              simple
13           Numeric imputation                mean
14       Categorical imputation                mode
15     Maximum one-hot encoding                  25
16              Encoding method                None
17                    Normalize                True
18             Normalize method              zscore
19             Transform target                True
20      Transform target method         yeo-johnson
21               Fold Generator               KFold
22                  Fold Number                  10
23                     CPU Jobs                  -1
24                      Use GPU               False
25               Log Experiment        MlflowLogger
26              Experiment Name         My_Reg_Modl
27                          USI                7172
2024-02-19 14:48:34,090:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-19 14:48:34,090:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 14:48:34,293:INFO:Soft dependency imported: xgboost: 2.0.3
2024-02-19 14:48:34,293:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-02-19 14:48:34,309:INFO:Logging experiment in loggers
2024-02-19 14:48:34,720:INFO:SubProcess save_model() called ==================================
2024-02-19 14:48:34,836:INFO:Initializing save_model()
2024-02-19 14:48:34,836:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\DELL\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(include=['months_as_customer', 'age',
                                             'policy_number',
                                             'policy_deductable',
                                             'policy_annual_premi...
                 TransformerWrapper(include=['policy_bind_date',
                                             'incident_date',
                                             'incident_location',
                                             'auto_model'],
                                    transformer=TargetEncoder(cols=['policy_bind_date',
                                                                    'incident_date',
                                                                    'incident_location',
                                                                    'auto_model'],
                                                              handle_missing='return_nan'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), model_name=C:\Users\DELL\AppData\Local\Temp\tmpp8hqacqg\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\DELL\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(include=['months_as_customer', 'age',
                                             'policy_number',
                                             'policy_deductable',
                                             'policy_annual_premi...
                 TransformerWrapper(include=['policy_bind_date',
                                             'incident_date',
                                             'incident_location',
                                             'auto_model'],
                                    transformer=TargetEncoder(cols=['policy_bind_date',
                                                                    'incident_date',
                                                                    'incident_location',
                                                                    'auto_model'],
                                                              handle_missing='return_nan'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=False, use_case=MLUsecase.REGRESSION, kwargs={})
2024-02-19 14:48:34,836:INFO:Adding model into prep_pipe
2024-02-19 14:48:34,836:WARNING:Only Model saved as it was a pipeline.
2024-02-19 14:48:34,890:INFO:C:\Users\DELL\AppData\Local\Temp\tmpp8hqacqg\Transformation Pipeline.pkl saved in current working directory
2024-02-19 14:48:34,937:INFO:Pipeline(memory=FastMemory(location=C:\Users\DELL\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(include=['months_as_customer', 'age',
                                             'policy_number',
                                             'policy_deductable',
                                             'policy_annual_premi...
                 TransformerWrapper(include=['policy_bind_date',
                                             'incident_date',
                                             'incident_location',
                                             'auto_model'],
                                    transformer=TargetEncoder(cols=['policy_bind_date',
                                                                    'incident_date',
                                                                    'incident_location',
                                                                    'auto_model'],
                                                              handle_missing='return_nan'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-02-19 14:48:34,937:INFO:save_model() successfully completed......................................
2024-02-19 14:48:35,519:INFO:SubProcess save_model() end ==================================
2024-02-19 14:48:35,668:INFO:setup() successfully completed in 7.05s...............
2024-02-19 14:48:35,820:INFO:Initializing compare_models()
2024-02-19 14:48:35,820:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024376A10350>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000024376A10350>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2024-02-19 14:48:35,820:INFO:Checking exceptions
2024-02-19 14:48:35,820:INFO:Preparing display monitor
2024-02-19 14:48:35,869:INFO:Initializing Linear Regression
2024-02-19 14:48:35,869:INFO:Total runtime is 0.0 minutes
2024-02-19 14:48:35,869:INFO:SubProcess create_model() called ==================================
2024-02-19 14:48:35,869:INFO:Initializing create_model()
2024-02-19 14:48:35,869:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024376A10350>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000243731D5490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 14:48:35,869:INFO:Checking exceptions
2024-02-19 14:48:35,869:INFO:Importing libraries
2024-02-19 14:48:35,869:INFO:Copying training dataset
2024-02-19 14:48:35,886:INFO:Defining folds
2024-02-19 14:48:35,886:INFO:Declaring metric variables
2024-02-19 14:48:35,886:INFO:Importing untrained model
2024-02-19 14:48:35,886:INFO:Linear Regression Imported successfully
2024-02-19 14:48:35,905:INFO:Starting cross validation
2024-02-19 14:48:35,935:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 14:48:41,426:INFO:Calculating mean and std
2024-02-19 14:48:41,426:INFO:Creating metrics dataframe
2024-02-19 14:48:41,426:INFO:Uploading results into container
2024-02-19 14:48:41,442:INFO:Uploading model into container now
2024-02-19 14:48:41,442:INFO:_master_model_container: 1
2024-02-19 14:48:41,442:INFO:_display_container: 2
2024-02-19 14:48:41,442:INFO:LinearRegression(n_jobs=-1)
2024-02-19 14:48:41,442:INFO:create_model() successfully completed......................................
2024-02-19 14:48:42,178:INFO:SubProcess create_model() end ==================================
2024-02-19 14:48:42,179:INFO:Creating metrics dataframe
2024-02-19 14:48:42,191:INFO:Initializing Lasso Regression
2024-02-19 14:48:42,191:INFO:Total runtime is 0.1053718129793803 minutes
2024-02-19 14:48:42,206:INFO:SubProcess create_model() called ==================================
2024-02-19 14:48:42,206:INFO:Initializing create_model()
2024-02-19 14:48:42,206:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024376A10350>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000243731D5490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 14:48:42,206:INFO:Checking exceptions
2024-02-19 14:48:42,206:INFO:Importing libraries
2024-02-19 14:48:42,206:INFO:Copying training dataset
2024-02-19 14:48:42,227:INFO:Defining folds
2024-02-19 14:48:42,227:INFO:Declaring metric variables
2024-02-19 14:48:42,238:INFO:Importing untrained model
2024-02-19 14:48:42,251:INFO:Lasso Regression Imported successfully
2024-02-19 14:48:42,256:INFO:Starting cross validation
2024-02-19 14:48:42,268:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 14:48:47,835:INFO:Calculating mean and std
2024-02-19 14:48:47,853:INFO:Creating metrics dataframe
2024-02-19 14:48:47,854:INFO:Uploading results into container
2024-02-19 14:48:47,854:INFO:Uploading model into container now
2024-02-19 14:48:47,854:INFO:_master_model_container: 2
2024-02-19 14:48:47,854:INFO:_display_container: 2
2024-02-19 14:48:47,854:INFO:Lasso(random_state=8008)
2024-02-19 14:48:47,854:INFO:create_model() successfully completed......................................
2024-02-19 14:48:48,638:INFO:SubProcess create_model() end ==================================
2024-02-19 14:48:48,638:INFO:Creating metrics dataframe
2024-02-19 14:48:48,654:INFO:Initializing Ridge Regression
2024-02-19 14:48:48,654:INFO:Total runtime is 0.21307496627171835 minutes
2024-02-19 14:48:48,654:INFO:SubProcess create_model() called ==================================
2024-02-19 14:48:48,654:INFO:Initializing create_model()
2024-02-19 14:48:48,654:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024376A10350>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000243731D5490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 14:48:48,654:INFO:Checking exceptions
2024-02-19 14:48:48,654:INFO:Importing libraries
2024-02-19 14:48:48,654:INFO:Copying training dataset
2024-02-19 14:48:48,687:INFO:Defining folds
2024-02-19 14:48:48,687:INFO:Declaring metric variables
2024-02-19 14:48:48,692:INFO:Importing untrained model
2024-02-19 14:48:48,705:INFO:Ridge Regression Imported successfully
2024-02-19 14:48:48,706:INFO:Starting cross validation
2024-02-19 14:48:48,722:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 14:48:50,535:INFO:Calculating mean and std
2024-02-19 14:48:50,535:INFO:Creating metrics dataframe
2024-02-19 14:48:50,535:INFO:Uploading results into container
2024-02-19 14:48:50,535:INFO:Uploading model into container now
2024-02-19 14:48:50,535:INFO:_master_model_container: 3
2024-02-19 14:48:50,535:INFO:_display_container: 2
2024-02-19 14:48:50,535:INFO:Ridge(random_state=8008)
2024-02-19 14:48:50,535:INFO:create_model() successfully completed......................................
2024-02-19 14:48:51,373:INFO:SubProcess create_model() end ==================================
2024-02-19 14:48:51,373:INFO:Creating metrics dataframe
2024-02-19 14:48:51,383:INFO:Initializing Elastic Net
2024-02-19 14:48:51,383:INFO:Total runtime is 0.25857231616973875 minutes
2024-02-19 14:48:51,388:INFO:SubProcess create_model() called ==================================
2024-02-19 14:48:51,388:INFO:Initializing create_model()
2024-02-19 14:48:51,388:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024376A10350>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000243731D5490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 14:48:51,388:INFO:Checking exceptions
2024-02-19 14:48:51,388:INFO:Importing libraries
2024-02-19 14:48:51,388:INFO:Copying training dataset
2024-02-19 14:48:51,410:INFO:Defining folds
2024-02-19 14:48:51,410:INFO:Declaring metric variables
2024-02-19 14:48:51,419:INFO:Importing untrained model
2024-02-19 14:48:51,425:INFO:Elastic Net Imported successfully
2024-02-19 14:48:51,439:INFO:Starting cross validation
2024-02-19 14:48:51,442:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 14:48:53,347:INFO:Calculating mean and std
2024-02-19 14:48:53,347:INFO:Creating metrics dataframe
2024-02-19 14:48:53,352:INFO:Uploading results into container
2024-02-19 14:48:53,352:INFO:Uploading model into container now
2024-02-19 14:48:53,352:INFO:_master_model_container: 4
2024-02-19 14:48:53,352:INFO:_display_container: 2
2024-02-19 14:48:53,352:INFO:ElasticNet(random_state=8008)
2024-02-19 14:48:53,352:INFO:create_model() successfully completed......................................
2024-02-19 14:48:54,185:INFO:SubProcess create_model() end ==================================
2024-02-19 14:48:54,185:INFO:Creating metrics dataframe
2024-02-19 14:48:54,207:INFO:Initializing Least Angle Regression
2024-02-19 14:48:54,207:INFO:Total runtime is 0.30563484032948807 minutes
2024-02-19 14:48:54,221:INFO:SubProcess create_model() called ==================================
2024-02-19 14:48:54,221:INFO:Initializing create_model()
2024-02-19 14:48:54,221:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024376A10350>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000243731D5490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 14:48:54,221:INFO:Checking exceptions
2024-02-19 14:48:54,223:INFO:Importing libraries
2024-02-19 14:48:54,223:INFO:Copying training dataset
2024-02-19 14:48:54,241:INFO:Defining folds
2024-02-19 14:48:54,241:INFO:Declaring metric variables
2024-02-19 14:48:54,245:INFO:Importing untrained model
2024-02-19 14:48:54,252:INFO:Least Angle Regression Imported successfully
2024-02-19 14:48:54,264:INFO:Starting cross validation
2024-02-19 14:48:54,271:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 14:48:55,038:INFO:Calculating mean and std
2024-02-19 14:48:55,040:INFO:Creating metrics dataframe
2024-02-19 14:48:55,043:INFO:Uploading results into container
2024-02-19 14:48:55,044:INFO:Uploading model into container now
2024-02-19 14:48:55,044:INFO:_master_model_container: 5
2024-02-19 14:48:55,045:INFO:_display_container: 2
2024-02-19 14:48:55,045:INFO:Lars(random_state=8008)
2024-02-19 14:48:55,045:INFO:create_model() successfully completed......................................
2024-02-19 14:48:55,835:INFO:SubProcess create_model() end ==================================
2024-02-19 14:48:55,835:INFO:Creating metrics dataframe
2024-02-19 14:48:55,856:INFO:Initializing Lasso Least Angle Regression
2024-02-19 14:48:55,856:INFO:Total runtime is 0.3331087668736775 minutes
2024-02-19 14:48:55,856:INFO:SubProcess create_model() called ==================================
2024-02-19 14:48:55,856:INFO:Initializing create_model()
2024-02-19 14:48:55,856:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024376A10350>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000243731D5490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 14:48:55,856:INFO:Checking exceptions
2024-02-19 14:48:55,867:INFO:Importing libraries
2024-02-19 14:48:55,867:INFO:Copying training dataset
2024-02-19 14:48:55,887:INFO:Defining folds
2024-02-19 14:48:55,887:INFO:Declaring metric variables
2024-02-19 14:48:55,890:INFO:Importing untrained model
2024-02-19 14:48:55,894:INFO:Lasso Least Angle Regression Imported successfully
2024-02-19 14:48:55,910:INFO:Starting cross validation
2024-02-19 14:48:55,919:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 14:48:56,615:INFO:Calculating mean and std
2024-02-19 14:48:56,616:INFO:Creating metrics dataframe
2024-02-19 14:48:56,619:INFO:Uploading results into container
2024-02-19 14:48:56,620:INFO:Uploading model into container now
2024-02-19 14:48:56,620:INFO:_master_model_container: 6
2024-02-19 14:48:56,620:INFO:_display_container: 2
2024-02-19 14:48:56,621:INFO:LassoLars(random_state=8008)
2024-02-19 14:48:56,621:INFO:create_model() successfully completed......................................
2024-02-19 14:48:57,346:INFO:SubProcess create_model() end ==================================
2024-02-19 14:48:57,347:INFO:Creating metrics dataframe
2024-02-19 14:48:57,351:INFO:Initializing Orthogonal Matching Pursuit
2024-02-19 14:48:57,351:INFO:Total runtime is 0.3580292145411173 minutes
2024-02-19 14:48:57,368:INFO:SubProcess create_model() called ==================================
2024-02-19 14:48:57,368:INFO:Initializing create_model()
2024-02-19 14:48:57,368:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024376A10350>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000243731D5490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 14:48:57,368:INFO:Checking exceptions
2024-02-19 14:48:57,368:INFO:Importing libraries
2024-02-19 14:48:57,368:INFO:Copying training dataset
2024-02-19 14:48:57,383:INFO:Defining folds
2024-02-19 14:48:57,383:INFO:Declaring metric variables
2024-02-19 14:48:57,387:INFO:Importing untrained model
2024-02-19 14:48:57,391:INFO:Orthogonal Matching Pursuit Imported successfully
2024-02-19 14:48:57,400:INFO:Starting cross validation
2024-02-19 14:48:57,408:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 14:48:57,811:WARNING:C:\Users\DELL\anaconda3\Lib\site-packages\sklearn\linear_model\_omp.py:771: RuntimeWarning: Orthogonal matching pursuit ended prematurely due to linear dependence in the dictionary. The requested precision might not have been met.
  coef_, self.n_iter_ = orthogonal_mp_gram(

2024-02-19 14:48:57,858:WARNING:C:\Users\DELL\anaconda3\Lib\site-packages\sklearn\linear_model\_omp.py:771: RuntimeWarning: Orthogonal matching pursuit ended prematurely due to linear dependence in the dictionary. The requested precision might not have been met.
  coef_, self.n_iter_ = orthogonal_mp_gram(

2024-02-19 14:48:57,889:WARNING:C:\Users\DELL\anaconda3\Lib\site-packages\sklearn\linear_model\_omp.py:771: RuntimeWarning: Orthogonal matching pursuit ended prematurely due to linear dependence in the dictionary. The requested precision might not have been met.
  coef_, self.n_iter_ = orthogonal_mp_gram(

2024-02-19 14:48:57,999:WARNING:C:\Users\DELL\anaconda3\Lib\site-packages\sklearn\linear_model\_omp.py:771: RuntimeWarning: Orthogonal matching pursuit ended prematurely due to linear dependence in the dictionary. The requested precision might not have been met.
  coef_, self.n_iter_ = orthogonal_mp_gram(

2024-02-19 14:48:58,077:INFO:Calculating mean and std
2024-02-19 14:48:58,077:INFO:Creating metrics dataframe
2024-02-19 14:48:58,077:INFO:Uploading results into container
2024-02-19 14:48:58,077:INFO:Uploading model into container now
2024-02-19 14:48:58,077:INFO:_master_model_container: 7
2024-02-19 14:48:58,077:INFO:_display_container: 2
2024-02-19 14:48:58,077:INFO:OrthogonalMatchingPursuit()
2024-02-19 14:48:58,077:INFO:create_model() successfully completed......................................
2024-02-19 14:48:58,819:INFO:SubProcess create_model() end ==================================
2024-02-19 14:48:58,819:INFO:Creating metrics dataframe
2024-02-19 14:48:58,835:INFO:Initializing Bayesian Ridge
2024-02-19 14:48:58,835:INFO:Total runtime is 0.38276099761327104 minutes
2024-02-19 14:48:58,835:INFO:SubProcess create_model() called ==================================
2024-02-19 14:48:58,835:INFO:Initializing create_model()
2024-02-19 14:48:58,835:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024376A10350>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000243731D5490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 14:48:58,835:INFO:Checking exceptions
2024-02-19 14:48:58,835:INFO:Importing libraries
2024-02-19 14:48:58,835:INFO:Copying training dataset
2024-02-19 14:48:58,852:INFO:Defining folds
2024-02-19 14:48:58,852:INFO:Declaring metric variables
2024-02-19 14:48:58,867:INFO:Importing untrained model
2024-02-19 14:48:58,872:INFO:Bayesian Ridge Imported successfully
2024-02-19 14:48:58,882:INFO:Starting cross validation
2024-02-19 14:48:58,882:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 14:48:59,680:INFO:Calculating mean and std
2024-02-19 14:48:59,680:INFO:Creating metrics dataframe
2024-02-19 14:48:59,680:INFO:Uploading results into container
2024-02-19 14:48:59,680:INFO:Uploading model into container now
2024-02-19 14:48:59,680:INFO:_master_model_container: 8
2024-02-19 14:48:59,680:INFO:_display_container: 2
2024-02-19 14:48:59,680:INFO:BayesianRidge()
2024-02-19 14:48:59,680:INFO:create_model() successfully completed......................................
2024-02-19 14:49:00,464:INFO:SubProcess create_model() end ==================================
2024-02-19 14:49:00,464:INFO:Creating metrics dataframe
2024-02-19 14:49:00,464:INFO:Initializing Passive Aggressive Regressor
2024-02-19 14:49:00,464:INFO:Total runtime is 0.40990655422210687 minutes
2024-02-19 14:49:00,479:INFO:SubProcess create_model() called ==================================
2024-02-19 14:49:00,479:INFO:Initializing create_model()
2024-02-19 14:49:00,479:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024376A10350>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000243731D5490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 14:49:00,479:INFO:Checking exceptions
2024-02-19 14:49:00,479:INFO:Importing libraries
2024-02-19 14:49:00,479:INFO:Copying training dataset
2024-02-19 14:49:00,495:INFO:Defining folds
2024-02-19 14:49:00,495:INFO:Declaring metric variables
2024-02-19 14:49:00,495:INFO:Importing untrained model
2024-02-19 14:49:00,495:INFO:Passive Aggressive Regressor Imported successfully
2024-02-19 14:49:00,511:INFO:Starting cross validation
2024-02-19 14:49:00,511:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 14:49:02,872:INFO:Calculating mean and std
2024-02-19 14:49:02,888:INFO:Creating metrics dataframe
2024-02-19 14:49:02,888:INFO:Uploading results into container
2024-02-19 14:49:02,888:INFO:Uploading model into container now
2024-02-19 14:49:02,888:INFO:_master_model_container: 9
2024-02-19 14:49:02,888:INFO:_display_container: 2
2024-02-19 14:49:02,888:INFO:PassiveAggressiveRegressor(random_state=8008)
2024-02-19 14:49:02,888:INFO:create_model() successfully completed......................................
2024-02-19 14:49:03,436:INFO:SubProcess create_model() end ==================================
2024-02-19 14:49:03,436:INFO:Creating metrics dataframe
2024-02-19 14:49:03,452:INFO:Initializing Huber Regressor
2024-02-19 14:49:03,452:INFO:Total runtime is 0.4597122192382812 minutes
2024-02-19 14:49:03,452:INFO:SubProcess create_model() called ==================================
2024-02-19 14:49:03,452:INFO:Initializing create_model()
2024-02-19 14:49:03,452:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024376A10350>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000243731D5490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 14:49:03,452:INFO:Checking exceptions
2024-02-19 14:49:03,452:INFO:Importing libraries
2024-02-19 14:49:03,452:INFO:Copying training dataset
2024-02-19 14:49:03,460:INFO:Defining folds
2024-02-19 14:49:03,460:INFO:Declaring metric variables
2024-02-19 14:49:03,469:INFO:Importing untrained model
2024-02-19 14:49:03,474:INFO:Huber Regressor Imported successfully
2024-02-19 14:49:03,474:INFO:Starting cross validation
2024-02-19 14:49:03,485:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 14:49:03,813:WARNING:C:\Users\DELL\anaconda3\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-02-19 14:49:03,859:WARNING:C:\Users\DELL\anaconda3\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-02-19 14:49:03,875:WARNING:C:\Users\DELL\anaconda3\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-02-19 14:49:03,891:WARNING:C:\Users\DELL\anaconda3\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-02-19 14:49:03,891:WARNING:C:\Users\DELL\anaconda3\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-02-19 14:49:03,891:WARNING:C:\Users\DELL\anaconda3\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-02-19 14:49:03,906:WARNING:C:\Users\DELL\anaconda3\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-02-19 14:49:03,938:WARNING:C:\Users\DELL\anaconda3\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-02-19 14:49:03,969:WARNING:C:\Users\DELL\anaconda3\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-02-19 14:49:03,969:WARNING:C:\Users\DELL\anaconda3\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-02-19 14:49:04,063:INFO:Calculating mean and std
2024-02-19 14:49:04,063:INFO:Creating metrics dataframe
2024-02-19 14:49:04,063:INFO:Uploading results into container
2024-02-19 14:49:04,063:INFO:Uploading model into container now
2024-02-19 14:49:04,063:INFO:_master_model_container: 10
2024-02-19 14:49:04,063:INFO:_display_container: 2
2024-02-19 14:49:04,063:INFO:HuberRegressor()
2024-02-19 14:49:04,063:INFO:create_model() successfully completed......................................
2024-02-19 14:49:04,533:INFO:SubProcess create_model() end ==================================
2024-02-19 14:49:04,533:INFO:Creating metrics dataframe
2024-02-19 14:49:04,548:INFO:Initializing K Neighbors Regressor
2024-02-19 14:49:04,548:INFO:Total runtime is 0.4779850602149963 minutes
2024-02-19 14:49:04,548:INFO:SubProcess create_model() called ==================================
2024-02-19 14:49:04,548:INFO:Initializing create_model()
2024-02-19 14:49:04,548:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024376A10350>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000243731D5490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 14:49:04,548:INFO:Checking exceptions
2024-02-19 14:49:04,548:INFO:Importing libraries
2024-02-19 14:49:04,548:INFO:Copying training dataset
2024-02-19 14:49:04,548:INFO:Defining folds
2024-02-19 14:49:04,548:INFO:Declaring metric variables
2024-02-19 14:49:04,548:INFO:Importing untrained model
2024-02-19 14:49:04,548:INFO:K Neighbors Regressor Imported successfully
2024-02-19 14:49:04,564:INFO:Starting cross validation
2024-02-19 14:49:04,564:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 14:49:05,190:INFO:Calculating mean and std
2024-02-19 14:49:05,190:INFO:Creating metrics dataframe
2024-02-19 14:49:05,190:INFO:Uploading results into container
2024-02-19 14:49:05,190:INFO:Uploading model into container now
2024-02-19 14:49:05,190:INFO:_master_model_container: 11
2024-02-19 14:49:05,190:INFO:_display_container: 2
2024-02-19 14:49:05,190:INFO:KNeighborsRegressor(n_jobs=-1)
2024-02-19 14:49:05,190:INFO:create_model() successfully completed......................................
2024-02-19 14:49:05,596:INFO:SubProcess create_model() end ==================================
2024-02-19 14:49:05,596:INFO:Creating metrics dataframe
2024-02-19 14:49:05,612:INFO:Initializing Decision Tree Regressor
2024-02-19 14:49:05,612:INFO:Total runtime is 0.49571231603622434 minutes
2024-02-19 14:49:05,612:INFO:SubProcess create_model() called ==================================
2024-02-19 14:49:05,612:INFO:Initializing create_model()
2024-02-19 14:49:05,612:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024376A10350>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000243731D5490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 14:49:05,612:INFO:Checking exceptions
2024-02-19 14:49:05,612:INFO:Importing libraries
2024-02-19 14:49:05,612:INFO:Copying training dataset
2024-02-19 14:49:05,612:INFO:Defining folds
2024-02-19 14:49:05,612:INFO:Declaring metric variables
2024-02-19 14:49:05,627:INFO:Importing untrained model
2024-02-19 14:49:05,627:INFO:Decision Tree Regressor Imported successfully
2024-02-19 14:49:05,627:INFO:Starting cross validation
2024-02-19 14:49:05,627:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 14:49:06,159:INFO:Calculating mean and std
2024-02-19 14:49:06,159:INFO:Creating metrics dataframe
2024-02-19 14:49:06,159:INFO:Uploading results into container
2024-02-19 14:49:06,159:INFO:Uploading model into container now
2024-02-19 14:49:06,159:INFO:_master_model_container: 12
2024-02-19 14:49:06,159:INFO:_display_container: 2
2024-02-19 14:49:06,159:INFO:DecisionTreeRegressor(random_state=8008)
2024-02-19 14:49:06,159:INFO:create_model() successfully completed......................................
2024-02-19 14:49:06,473:INFO:SubProcess create_model() end ==================================
2024-02-19 14:49:06,473:INFO:Creating metrics dataframe
2024-02-19 14:49:06,489:INFO:Initializing Random Forest Regressor
2024-02-19 14:49:06,489:INFO:Total runtime is 0.5103264808654785 minutes
2024-02-19 14:49:06,489:INFO:SubProcess create_model() called ==================================
2024-02-19 14:49:06,489:INFO:Initializing create_model()
2024-02-19 14:49:06,489:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024376A10350>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000243731D5490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 14:49:06,489:INFO:Checking exceptions
2024-02-19 14:49:06,489:INFO:Importing libraries
2024-02-19 14:49:06,489:INFO:Copying training dataset
2024-02-19 14:49:06,506:INFO:Defining folds
2024-02-19 14:49:06,507:INFO:Declaring metric variables
2024-02-19 14:49:06,508:INFO:Importing untrained model
2024-02-19 14:49:06,509:INFO:Random Forest Regressor Imported successfully
2024-02-19 14:49:06,516:INFO:Starting cross validation
2024-02-19 14:49:06,518:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 14:49:08,261:INFO:Calculating mean and std
2024-02-19 14:49:08,261:INFO:Creating metrics dataframe
2024-02-19 14:49:08,261:INFO:Uploading results into container
2024-02-19 14:49:08,277:INFO:Uploading model into container now
2024-02-19 14:49:08,277:INFO:_master_model_container: 13
2024-02-19 14:49:08,277:INFO:_display_container: 2
2024-02-19 14:49:08,277:INFO:RandomForestRegressor(n_jobs=-1, random_state=8008)
2024-02-19 14:49:08,277:INFO:create_model() successfully completed......................................
2024-02-19 14:49:08,621:INFO:SubProcess create_model() end ==================================
2024-02-19 14:49:08,621:INFO:Creating metrics dataframe
2024-02-19 14:49:08,637:INFO:Initializing Extra Trees Regressor
2024-02-19 14:49:08,637:INFO:Total runtime is 0.5461285233497619 minutes
2024-02-19 14:49:08,637:INFO:SubProcess create_model() called ==================================
2024-02-19 14:49:08,637:INFO:Initializing create_model()
2024-02-19 14:49:08,637:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024376A10350>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000243731D5490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 14:49:08,637:INFO:Checking exceptions
2024-02-19 14:49:08,637:INFO:Importing libraries
2024-02-19 14:49:08,637:INFO:Copying training dataset
2024-02-19 14:49:08,637:INFO:Defining folds
2024-02-19 14:49:08,637:INFO:Declaring metric variables
2024-02-19 14:49:08,637:INFO:Importing untrained model
2024-02-19 14:49:08,637:INFO:Extra Trees Regressor Imported successfully
2024-02-19 14:49:08,652:INFO:Starting cross validation
2024-02-19 14:49:08,652:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 14:49:10,048:INFO:Calculating mean and std
2024-02-19 14:49:10,048:INFO:Creating metrics dataframe
2024-02-19 14:49:10,048:INFO:Uploading results into container
2024-02-19 14:49:10,048:INFO:Uploading model into container now
2024-02-19 14:49:10,048:INFO:_master_model_container: 14
2024-02-19 14:49:10,048:INFO:_display_container: 2
2024-02-19 14:49:10,048:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=8008)
2024-02-19 14:49:10,048:INFO:create_model() successfully completed......................................
2024-02-19 14:49:10,455:INFO:SubProcess create_model() end ==================================
2024-02-19 14:49:10,455:INFO:Creating metrics dataframe
2024-02-19 14:49:10,470:INFO:Initializing AdaBoost Regressor
2024-02-19 14:49:10,470:INFO:Total runtime is 0.5766880353291829 minutes
2024-02-19 14:49:10,470:INFO:SubProcess create_model() called ==================================
2024-02-19 14:49:10,470:INFO:Initializing create_model()
2024-02-19 14:49:10,470:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024376A10350>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000243731D5490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 14:49:10,470:INFO:Checking exceptions
2024-02-19 14:49:10,470:INFO:Importing libraries
2024-02-19 14:49:10,470:INFO:Copying training dataset
2024-02-19 14:49:10,486:INFO:Defining folds
2024-02-19 14:49:10,486:INFO:Declaring metric variables
2024-02-19 14:49:10,486:INFO:Importing untrained model
2024-02-19 14:49:10,486:INFO:AdaBoost Regressor Imported successfully
2024-02-19 14:49:10,486:INFO:Starting cross validation
2024-02-19 14:49:10,486:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 14:49:11,252:INFO:Calculating mean and std
2024-02-19 14:49:11,252:INFO:Creating metrics dataframe
2024-02-19 14:49:11,252:INFO:Uploading results into container
2024-02-19 14:49:11,252:INFO:Uploading model into container now
2024-02-19 14:49:11,252:INFO:_master_model_container: 15
2024-02-19 14:49:11,252:INFO:_display_container: 2
2024-02-19 14:49:11,252:INFO:AdaBoostRegressor(random_state=8008)
2024-02-19 14:49:11,252:INFO:create_model() successfully completed......................................
2024-02-19 14:49:11,597:INFO:SubProcess create_model() end ==================================
2024-02-19 14:49:11,597:INFO:Creating metrics dataframe
2024-02-19 14:49:11,613:INFO:Initializing Gradient Boosting Regressor
2024-02-19 14:49:11,613:INFO:Total runtime is 0.5957263151804606 minutes
2024-02-19 14:49:11,613:INFO:SubProcess create_model() called ==================================
2024-02-19 14:49:11,613:INFO:Initializing create_model()
2024-02-19 14:49:11,613:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024376A10350>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000243731D5490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 14:49:11,613:INFO:Checking exceptions
2024-02-19 14:49:11,613:INFO:Importing libraries
2024-02-19 14:49:11,613:INFO:Copying training dataset
2024-02-19 14:49:11,613:INFO:Defining folds
2024-02-19 14:49:11,613:INFO:Declaring metric variables
2024-02-19 14:49:11,613:INFO:Importing untrained model
2024-02-19 14:49:11,613:INFO:Gradient Boosting Regressor Imported successfully
2024-02-19 14:49:11,628:INFO:Starting cross validation
2024-02-19 14:49:11,628:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 14:49:12,645:INFO:Calculating mean and std
2024-02-19 14:49:12,645:INFO:Creating metrics dataframe
2024-02-19 14:49:12,645:INFO:Uploading results into container
2024-02-19 14:49:12,645:INFO:Uploading model into container now
2024-02-19 14:49:12,660:INFO:_master_model_container: 16
2024-02-19 14:49:12,660:INFO:_display_container: 2
2024-02-19 14:49:12,660:INFO:GradientBoostingRegressor(random_state=8008)
2024-02-19 14:49:12,660:INFO:create_model() successfully completed......................................
2024-02-19 14:49:12,973:INFO:SubProcess create_model() end ==================================
2024-02-19 14:49:12,973:INFO:Creating metrics dataframe
2024-02-19 14:49:12,989:INFO:Initializing Extreme Gradient Boosting
2024-02-19 14:49:12,989:INFO:Total runtime is 0.6186594764391581 minutes
2024-02-19 14:49:12,989:INFO:SubProcess create_model() called ==================================
2024-02-19 14:49:12,989:INFO:Initializing create_model()
2024-02-19 14:49:12,989:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024376A10350>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000243731D5490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 14:49:12,989:INFO:Checking exceptions
2024-02-19 14:49:12,989:INFO:Importing libraries
2024-02-19 14:49:12,989:INFO:Copying training dataset
2024-02-19 14:49:13,004:INFO:Defining folds
2024-02-19 14:49:13,004:INFO:Declaring metric variables
2024-02-19 14:49:13,004:INFO:Importing untrained model
2024-02-19 14:49:13,004:INFO:Extreme Gradient Boosting Imported successfully
2024-02-19 14:49:13,004:INFO:Starting cross validation
2024-02-19 14:49:13,004:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 14:49:13,943:INFO:Calculating mean and std
2024-02-19 14:49:13,943:INFO:Creating metrics dataframe
2024-02-19 14:49:13,943:INFO:Uploading results into container
2024-02-19 14:49:13,943:INFO:Uploading model into container now
2024-02-19 14:49:13,943:INFO:_master_model_container: 17
2024-02-19 14:49:13,943:INFO:_display_container: 2
2024-02-19 14:49:13,943:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=8008, ...)
2024-02-19 14:49:13,943:INFO:create_model() successfully completed......................................
2024-02-19 14:49:14,287:INFO:SubProcess create_model() end ==================================
2024-02-19 14:49:14,287:INFO:Creating metrics dataframe
2024-02-19 14:49:14,303:INFO:Initializing Light Gradient Boosting Machine
2024-02-19 14:49:14,303:INFO:Total runtime is 0.640557078520457 minutes
2024-02-19 14:49:14,303:INFO:SubProcess create_model() called ==================================
2024-02-19 14:49:14,303:INFO:Initializing create_model()
2024-02-19 14:49:14,303:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024376A10350>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000243731D5490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 14:49:14,303:INFO:Checking exceptions
2024-02-19 14:49:14,303:INFO:Importing libraries
2024-02-19 14:49:14,303:INFO:Copying training dataset
2024-02-19 14:49:14,309:INFO:Defining folds
2024-02-19 14:49:14,309:INFO:Declaring metric variables
2024-02-19 14:49:14,309:INFO:Importing untrained model
2024-02-19 14:49:14,309:INFO:Light Gradient Boosting Machine Imported successfully
2024-02-19 14:49:14,318:INFO:Starting cross validation
2024-02-19 14:49:14,323:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 14:49:15,561:INFO:Calculating mean and std
2024-02-19 14:49:15,561:INFO:Creating metrics dataframe
2024-02-19 14:49:15,561:INFO:Uploading results into container
2024-02-19 14:49:15,577:INFO:Uploading model into container now
2024-02-19 14:49:15,577:INFO:_master_model_container: 18
2024-02-19 14:49:15,577:INFO:_display_container: 2
2024-02-19 14:49:15,577:INFO:LGBMRegressor(n_jobs=-1, random_state=8008)
2024-02-19 14:49:15,577:INFO:create_model() successfully completed......................................
2024-02-19 14:49:15,905:INFO:SubProcess create_model() end ==================================
2024-02-19 14:49:15,905:INFO:Creating metrics dataframe
2024-02-19 14:49:15,921:INFO:Initializing Dummy Regressor
2024-02-19 14:49:15,921:INFO:Total runtime is 0.6675260106722514 minutes
2024-02-19 14:49:15,921:INFO:SubProcess create_model() called ==================================
2024-02-19 14:49:15,921:INFO:Initializing create_model()
2024-02-19 14:49:15,921:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024376A10350>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000243731D5490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 14:49:15,921:INFO:Checking exceptions
2024-02-19 14:49:15,921:INFO:Importing libraries
2024-02-19 14:49:15,921:INFO:Copying training dataset
2024-02-19 14:49:15,936:INFO:Defining folds
2024-02-19 14:49:15,936:INFO:Declaring metric variables
2024-02-19 14:49:15,936:INFO:Importing untrained model
2024-02-19 14:49:15,936:INFO:Dummy Regressor Imported successfully
2024-02-19 14:49:15,936:INFO:Starting cross validation
2024-02-19 14:49:15,936:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-19 14:49:16,422:INFO:Calculating mean and std
2024-02-19 14:49:16,422:INFO:Creating metrics dataframe
2024-02-19 14:49:16,422:INFO:Uploading results into container
2024-02-19 14:49:16,422:INFO:Uploading model into container now
2024-02-19 14:49:16,422:INFO:_master_model_container: 19
2024-02-19 14:49:16,422:INFO:_display_container: 2
2024-02-19 14:49:16,422:INFO:DummyRegressor()
2024-02-19 14:49:16,422:INFO:create_model() successfully completed......................................
2024-02-19 14:49:16,687:INFO:SubProcess create_model() end ==================================
2024-02-19 14:49:16,687:INFO:Creating metrics dataframe
2024-02-19 14:49:16,703:WARNING:C:\Users\DELL\anaconda3\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-02-19 14:49:16,703:INFO:Initializing create_model()
2024-02-19 14:49:16,703:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024376A10350>, estimator=Ridge(random_state=8008), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 14:49:16,703:INFO:Checking exceptions
2024-02-19 14:49:16,703:INFO:Importing libraries
2024-02-19 14:49:16,703:INFO:Copying training dataset
2024-02-19 14:49:16,703:INFO:Defining folds
2024-02-19 14:49:16,703:INFO:Declaring metric variables
2024-02-19 14:49:16,703:INFO:Importing untrained model
2024-02-19 14:49:16,703:INFO:Declaring custom model
2024-02-19 14:49:16,719:INFO:Ridge Regression Imported successfully
2024-02-19 14:49:16,719:INFO:Cross validation set to False
2024-02-19 14:49:16,719:INFO:Fitting Model
2024-02-19 14:49:16,844:INFO:Ridge(random_state=8008)
2024-02-19 14:49:16,844:INFO:create_model() successfully completed......................................
2024-02-19 14:49:17,156:INFO:Creating Dashboard logs
2024-02-19 14:49:17,156:INFO:Model: Ridge Regression
2024-02-19 14:49:17,187:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'positive': False, 'random_state': 8008, 'solver': 'auto', 'tol': 0.0001}
2024-02-19 14:49:17,281:INFO:Initializing predict_model()
2024-02-19 14:49:17,281:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024376A10350>, estimator=Ridge(random_state=8008), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002430D34E5C0>)
2024-02-19 14:49:17,281:INFO:Checking exceptions
2024-02-19 14:49:17,281:INFO:Preloading libraries
2024-02-19 14:49:17,734:WARNING:C:\Users\DELL\anaconda3\Lib\site-packages\_distutils_hack\__init__.py:33: UserWarning: Setuptools is replacing distutils.
  warnings.warn("Setuptools is replacing distutils.")

2024-02-19 14:49:18,031:INFO:Creating Dashboard logs
2024-02-19 14:49:18,031:INFO:Model: Elastic Net
2024-02-19 14:49:18,078:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'l1_ratio': 0.5, 'max_iter': 1000, 'positive': False, 'precompute': False, 'random_state': 8008, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2024-02-19 14:49:18,500:INFO:Creating Dashboard logs
2024-02-19 14:49:18,516:INFO:Model: Passive Aggressive Regressor
2024-02-19 14:49:18,566:INFO:Logged params: {'C': 1.0, 'average': False, 'early_stopping': False, 'epsilon': 0.1, 'fit_intercept': True, 'loss': 'epsilon_insensitive', 'max_iter': 1000, 'n_iter_no_change': 5, 'random_state': 8008, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-02-19 14:49:18,961:INFO:Creating Dashboard logs
2024-02-19 14:49:18,961:INFO:Model: Huber Regressor
2024-02-19 14:49:19,008:INFO:Logged params: {'alpha': 0.0001, 'epsilon': 1.35, 'fit_intercept': True, 'max_iter': 100, 'tol': 1e-05, 'warm_start': False}
2024-02-19 14:49:19,479:INFO:Creating Dashboard logs
2024-02-19 14:49:19,479:INFO:Model: K Neighbors Regressor
2024-02-19 14:49:19,541:INFO:Logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2024-02-19 14:49:19,981:INFO:Creating Dashboard logs
2024-02-19 14:49:19,981:INFO:Model: Extra Trees Regressor
2024-02-19 14:49:20,012:INFO:Logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': 1.0, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 8008, 'verbose': 0, 'warm_start': False}
2024-02-19 14:49:20,435:INFO:Creating Dashboard logs
2024-02-19 14:49:20,435:INFO:Model: Light Gradient Boosting Machine
2024-02-19 14:49:20,466:INFO:Logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 8008, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2024-02-19 14:49:20,935:INFO:Creating Dashboard logs
2024-02-19 14:49:20,935:INFO:Model: Gradient Boosting Regressor
2024-02-19 14:49:20,966:INFO:Logged params: {'alpha': 0.9, 'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'squared_error', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'random_state': 8008, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-02-19 14:49:21,407:INFO:Creating Dashboard logs
2024-02-19 14:49:21,422:INFO:Model: Extreme Gradient Boosting
2024-02-19 14:49:21,454:INFO:Logged params: {'objective': 'reg:squarederror', 'base_score': None, 'booster': 'gbtree', 'callbacks': None, 'colsample_bylevel': None, 'colsample_bynode': None, 'colsample_bytree': None, 'device': 'cpu', 'early_stopping_rounds': None, 'enable_categorical': False, 'eval_metric': None, 'feature_types': None, 'gamma': None, 'grow_policy': None, 'importance_type': None, 'interaction_constraints': None, 'learning_rate': None, 'max_bin': None, 'max_cat_threshold': None, 'max_cat_to_onehot': None, 'max_delta_step': None, 'max_depth': None, 'max_leaves': None, 'min_child_weight': None, 'missing': nan, 'monotone_constraints': None, 'multi_strategy': None, 'n_estimators': None, 'n_jobs': -1, 'num_parallel_tree': None, 'random_state': 8008, 'reg_alpha': None, 'reg_lambda': None, 'sampling_method': None, 'scale_pos_weight': None, 'subsample': None, 'tree_method': 'auto', 'validate_parameters': None, 'verbosity': 0}
2024-02-19 14:49:21,909:INFO:Creating Dashboard logs
2024-02-19 14:49:21,925:INFO:Model: Random Forest Regressor
2024-02-19 14:49:21,956:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': 1.0, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 8008, 'verbose': 0, 'warm_start': False}
2024-02-19 14:49:22,378:INFO:Creating Dashboard logs
2024-02-19 14:49:22,394:INFO:Model: AdaBoost Regressor
2024-02-19 14:49:22,425:INFO:Logged params: {'base_estimator': 'deprecated', 'estimator': None, 'learning_rate': 1.0, 'loss': 'linear', 'n_estimators': 50, 'random_state': 8008}
2024-02-19 14:49:22,878:INFO:Creating Dashboard logs
2024-02-19 14:49:22,878:INFO:Model: Linear Regression
2024-02-19 14:49:22,909:INFO:Logged params: {'copy_X': True, 'fit_intercept': True, 'n_jobs': -1, 'positive': False}
2024-02-19 14:49:23,315:INFO:Creating Dashboard logs
2024-02-19 14:49:23,331:INFO:Model: Least Angle Regression
2024-02-19 14:49:23,378:INFO:Logged params: {'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'n_nonzero_coefs': 500, 'normalize': 'deprecated', 'precompute': 'auto', 'random_state': 8008, 'verbose': False}
2024-02-19 14:49:23,815:INFO:Creating Dashboard logs
2024-02-19 14:49:23,831:INFO:Model: Lasso Least Angle Regression
2024-02-19 14:49:23,847:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'max_iter': 500, 'normalize': 'deprecated', 'positive': False, 'precompute': 'auto', 'random_state': 8008, 'verbose': False}
2024-02-19 14:49:24,331:INFO:Creating Dashboard logs
2024-02-19 14:49:24,347:INFO:Model: Orthogonal Matching Pursuit
2024-02-19 14:49:24,378:INFO:Logged params: {'fit_intercept': True, 'n_nonzero_coefs': None, 'normalize': 'deprecated', 'precompute': 'auto', 'tol': None}
2024-02-19 14:49:24,801:INFO:Creating Dashboard logs
2024-02-19 14:49:24,801:INFO:Model: Dummy Regressor
2024-02-19 14:49:24,849:INFO:Logged params: {'constant': None, 'quantile': None, 'strategy': 'mean'}
2024-02-19 14:49:25,304:INFO:Creating Dashboard logs
2024-02-19 14:49:25,304:INFO:Model: Decision Tree Regressor
2024-02-19 14:49:25,335:INFO:Logged params: {'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'random_state': 8008, 'splitter': 'best'}
2024-02-19 14:49:25,772:INFO:Creating Dashboard logs
2024-02-19 14:49:25,772:INFO:Model: Lasso Regression
2024-02-19 14:49:25,819:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': 1000, 'positive': False, 'precompute': False, 'random_state': 8008, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2024-02-19 14:49:26,272:INFO:Creating Dashboard logs
2024-02-19 14:49:26,272:INFO:Model: Bayesian Ridge
2024-02-19 14:49:26,319:INFO:Logged params: {'alpha_1': 1e-06, 'alpha_2': 1e-06, 'alpha_init': None, 'compute_score': False, 'copy_X': True, 'fit_intercept': True, 'lambda_1': 1e-06, 'lambda_2': 1e-06, 'lambda_init': None, 'n_iter': 300, 'tol': 0.001, 'verbose': False}
2024-02-19 14:49:26,725:INFO:_master_model_container: 19
2024-02-19 14:49:26,725:INFO:_display_container: 2
2024-02-19 14:49:26,725:INFO:Ridge(random_state=8008)
2024-02-19 14:49:26,725:INFO:compare_models() successfully completed......................................
2024-02-19 14:49:26,747:INFO:Initializing evaluate_model()
2024-02-19 14:49:26,747:INFO:evaluate_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024376A10350>, estimator=Ridge(random_state=8008), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-02-19 14:49:26,758:INFO:Initializing plot_model()
2024-02-19 14:49:26,758:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024376A10350>, estimator=Ridge(random_state=8008), plot=pipeline, scale=1, save=False, fold=KFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-02-19 14:49:26,758:INFO:Checking exceptions
2024-02-19 14:49:26,758:INFO:Preloading libraries
2024-02-19 14:49:26,758:INFO:Copying training dataset
2024-02-19 14:49:26,758:INFO:Plot type: pipeline
2024-02-19 14:49:26,992:INFO:Visual Rendered Successfully
2024-02-19 14:49:27,320:INFO:plot_model() successfully completed......................................
2024-02-19 14:49:27,342:INFO:Initializing plot_model()
2024-02-19 14:49:27,342:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024376A10350>, estimator=Ridge(random_state=8008), plot=error, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-19 14:49:27,342:INFO:Checking exceptions
2024-02-19 14:49:27,352:INFO:Preloading libraries
2024-02-19 14:49:27,352:INFO:Copying training dataset
2024-02-19 14:49:27,352:INFO:Plot type: error
2024-02-19 14:49:27,540:INFO:Fitting Model
2024-02-19 14:49:27,540:WARNING:C:\Users\DELL\anaconda3\Lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but Ridge was fitted with feature names
  warnings.warn(

2024-02-19 14:49:27,540:INFO:Scoring test/hold-out set
2024-02-19 14:49:27,743:INFO:Visual Rendered Successfully
2024-02-19 14:49:28,040:INFO:plot_model() successfully completed......................................
2024-02-19 14:49:28,050:INFO:Initializing plot_model()
2024-02-19 14:49:28,050:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024376A10350>, estimator=Ridge(random_state=8008), plot=vc, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-19 14:49:28,050:INFO:Checking exceptions
2024-02-19 14:49:28,055:INFO:Preloading libraries
2024-02-19 14:49:28,055:INFO:Copying training dataset
2024-02-19 14:49:28,055:INFO:Plot type: vc
2024-02-19 14:49:28,057:INFO:Determining param_name
2024-02-19 14:49:28,057:INFO:param_name: alpha
2024-02-19 14:49:28,243:INFO:Fitting Model
2024-02-19 14:49:28,698:INFO:Visual Rendered Successfully
2024-02-19 14:49:28,980:INFO:plot_model() successfully completed......................................
2024-02-19 14:49:28,997:INFO:Initializing plot_model()
2024-02-19 14:49:28,997:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024376A10350>, estimator=Ridge(random_state=8008), plot=residuals, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-19 14:49:28,997:INFO:Checking exceptions
2024-02-19 14:49:28,997:INFO:Preloading libraries
2024-02-19 14:49:28,997:INFO:Copying training dataset
2024-02-19 14:49:28,997:INFO:Plot type: residuals
2024-02-19 14:49:29,168:INFO:Fitting Model
2024-02-19 14:49:29,168:WARNING:C:\Users\DELL\anaconda3\Lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but Ridge was fitted with feature names
  warnings.warn(

2024-02-19 14:49:29,183:INFO:Scoring test/hold-out set
2024-02-19 14:49:29,436:INFO:Visual Rendered Successfully
2024-02-19 14:49:29,809:INFO:plot_model() successfully completed......................................
2024-02-19 14:49:29,823:INFO:Initializing plot_model()
2024-02-19 14:49:29,823:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024376A10350>, estimator=Ridge(random_state=8008), plot=learning, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-19 14:49:29,823:INFO:Checking exceptions
2024-02-19 14:49:29,828:INFO:Preloading libraries
2024-02-19 14:49:29,828:INFO:Copying training dataset
2024-02-19 14:49:29,828:INFO:Plot type: learning
2024-02-19 14:49:29,982:INFO:Fitting Model
2024-02-19 14:49:30,390:INFO:Visual Rendered Successfully
2024-02-19 14:49:30,671:INFO:plot_model() successfully completed......................................
2024-02-19 14:49:30,681:INFO:Initializing plot_model()
2024-02-19 14:49:30,681:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024376A10350>, estimator=Ridge(random_state=8008), plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-02-19 14:49:30,681:INFO:Checking exceptions
2024-02-19 14:49:30,687:INFO:Preloading libraries
2024-02-19 14:49:30,687:INFO:Copying training dataset
2024-02-19 14:49:30,687:INFO:Plot type: feature
2024-02-19 14:49:30,875:INFO:Visual Rendered Successfully
2024-02-19 14:49:31,094:INFO:plot_model() successfully completed......................................
2024-02-19 14:49:31,104:INFO:Initializing predict_model()
2024-02-19 14:49:31,104:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024376A10350>, estimator=Ridge(random_state=8008), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002430D03DC60>)
2024-02-19 14:49:31,104:INFO:Checking exceptions
2024-02-19 14:49:31,104:INFO:Preloading libraries
2024-02-19 14:49:31,498:INFO:Initializing finalize_model()
2024-02-19 14:49:31,498:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024376A10350>, estimator=Ridge(random_state=8008), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-02-19 14:49:31,498:INFO:Finalizing Ridge(random_state=8008)
2024-02-19 14:49:31,501:INFO:Initializing create_model()
2024-02-19 14:49:31,501:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024376A10350>, estimator=Ridge(random_state=8008), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-02-19 14:49:31,501:INFO:Checking exceptions
2024-02-19 14:49:31,501:INFO:Importing libraries
2024-02-19 14:49:31,501:INFO:Copying training dataset
2024-02-19 14:49:31,501:INFO:Defining folds
2024-02-19 14:49:31,501:INFO:Declaring metric variables
2024-02-19 14:49:31,501:INFO:Importing untrained model
2024-02-19 14:49:31,501:INFO:Declaring custom model
2024-02-19 14:49:31,501:INFO:Ridge Regression Imported successfully
2024-02-19 14:49:31,501:INFO:Cross validation set to False
2024-02-19 14:49:31,501:INFO:Fitting Model
2024-02-19 14:49:31,658:INFO:Pipeline(memory=Memory(location=None),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(include=['months_as_customer', 'age',
                                             'policy_number',
                                             'policy_deductable',
                                             'policy_annual_premium',
                                             'umbrella_limit', 'insured_zip',
                                             'cap...
                                             'incident_location',
                                             'auto_model'],
                                    transformer=TargetEncoder(cols=['policy_bind_date',
                                                                    'incident_date',
                                                                    'incident_location',
                                                                    'auto_model'],
                                                              handle_missing='return_nan'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', Ridge(random_state=8008))])
2024-02-19 14:49:31,658:INFO:create_model() successfully completed......................................
2024-02-19 14:49:31,908:INFO:Creating Dashboard logs
2024-02-19 14:49:31,908:INFO:Model: Ridge Regression
2024-02-19 14:49:31,939:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'positive': False, 'random_state': 8008, 'solver': 'auto', 'tol': 0.0001}
2024-02-19 14:49:32,298:INFO:_master_model_container: 19
2024-02-19 14:49:32,298:INFO:_display_container: 3
2024-02-19 14:49:32,330:INFO:Pipeline(memory=Memory(location=None),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(include=['months_as_customer', 'age',
                                             'policy_number',
                                             'policy_deductable',
                                             'policy_annual_premium',
                                             'umbrella_limit', 'insured_zip',
                                             'cap...
                                             'incident_location',
                                             'auto_model'],
                                    transformer=TargetEncoder(cols=['policy_bind_date',
                                                                    'incident_date',
                                                                    'incident_location',
                                                                    'auto_model'],
                                                              handle_missing='return_nan'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', Ridge(random_state=8008))])
2024-02-19 14:49:32,330:INFO:finalize_model() successfully completed......................................
2024-02-19 14:49:32,658:INFO:Initializing save_model()
2024-02-19 14:49:32,658:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(include=['months_as_customer', 'age',
                                             'policy_number',
                                             'policy_deductable',
                                             'policy_annual_premium',
                                             'umbrella_limit', 'insured_zip',
                                             'cap...
                                             'incident_location',
                                             'auto_model'],
                                    transformer=TargetEncoder(cols=['policy_bind_date',
                                                                    'incident_date',
                                                                    'incident_location',
                                                                    'auto_model'],
                                                              handle_missing='return_nan'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', Ridge(random_state=8008))]), model_name=my_best_model_EXAMPLE, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\DELL\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(include=['months_as_customer', 'age',
                                             'policy_number',
                                             'policy_deductable',
                                             'policy_annual_premi...
                 TransformerWrapper(include=['policy_bind_date',
                                             'incident_date',
                                             'incident_location',
                                             'auto_model'],
                                    transformer=TargetEncoder(cols=['policy_bind_date',
                                                                    'incident_date',
                                                                    'incident_location',
                                                                    'auto_model'],
                                                              handle_missing='return_nan'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2024-02-19 14:49:32,658:INFO:Adding model into prep_pipe
2024-02-19 14:49:32,658:WARNING:Only Model saved as it was a pipeline.
2024-02-19 14:49:32,673:INFO:my_best_model_EXAMPLE.pkl saved in current working directory
2024-02-19 14:49:32,720:INFO:Pipeline(memory=Memory(location=None),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(include=['months_as_customer', 'age',
                                             'policy_number',
                                             'policy_deductable',
                                             'policy_annual_premium',
                                             'umbrella_limit', 'insured_zip',
                                             'cap...
                                             'incident_location',
                                             'auto_model'],
                                    transformer=TargetEncoder(cols=['policy_bind_date',
                                                                    'incident_date',
                                                                    'incident_location',
                                                                    'auto_model'],
                                                              handle_missing='return_nan'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', Ridge(random_state=8008))])
2024-02-19 14:49:32,720:INFO:save_model() successfully completed......................................
2024-02-19 14:49:33,096:INFO:Initializing load_model()
2024-02-19 14:49:33,096:INFO:load_model(model_name=my_best_model_EXAMPLE, platform=None, authentication=None, verbose=True)
